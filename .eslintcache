[{"/Users/marc.davies/Development/Oliva/give/src/reportWebVitals.js":"1","/Users/marc.davies/Development/Oliva/give/src/App.js":"2","/Users/marc.davies/Development/Oliva/give/src/index.js":"3","/Users/marc.davies/Development/Oliva/give/src/Quote.js":"4"},{"size":362,"mtime":1607427329384,"results":"5","hashOfConfig":"6"},{"size":4344,"mtime":1607531335580,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1607427329383,"results":"8","hashOfConfig":"6"},{"size":650,"mtime":1607528059431,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cp636t",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marc.davies/Development/Oliva/give/src/reportWebVitals.js",[],"/Users/marc.davies/Development/Oliva/give/src/App.js",["19","20"],"import { Fragment } from 'react';\nimport { Button, Paragraph } from '@olivahouse/ui';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { parse } from 'query-string';\n\nimport '@olivahouse/ui/lib/styles.css';\n\nimport styles from './styles.module.css';\n\nimport { Quote } from './Quote';\n\n// const isProduction = !window.location.href.includes('localhost');\nconst isProduction = false;\n\nconst STRIPE_PUBLC_API_KEY = isProduction\n  ? 'pk_live_51HYpBBIC0gTe0BTt1h2esyxTioSzPbrMk4vRFtV8OL8XCR0obV2Ieo18Ozw1PZoCfAtqfEAPQA2xXHeCz7mWKTqQ002QJbMlee'\n  : 'pk_test_51HYpBBIC0gTe0BTtZkET4e30h4PpAgB23MVqHvN9ffoYg2oAsu1HI7QfTOuLWwUhpgOcd8oeZ6CVFcVjU4QmS28Z006bgCey7P';\nconst STRIPE_PRODUCT_ID = isProduction\n  ? 'price_1Hw4AdIC0gTe0BTt0ryp1H41'\n  : 'price_1Hw4cNIC0gTe0BTth8yw42hB';\n\nconst stripePromise = loadStripe(STRIPE_PUBLC_API_KEY);\n\nconst { result } = parse(window.location.search);\n\nconst App = () => {\n\n  const handleClick = async (event) => {\n    // When the customer clicks on the button, redirect them to Checkout.\n    const stripe = await stripePromise;\n    const { error } = await stripe.redirectToCheckout({\n      lineItems: [{\n        price: STRIPE_PRODUCT_ID,\n        quantity: 1,\n      }],\n      mode: 'payment',\n      successUrl: `${window.location.origin}?result=success`,\n      cancelUrl: window.location.origin,\n    });\n    // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `error.message`.\n  };\n\n  return (\n    <div className={styles.viewport}>\n      <div className={styles.leftPane}>\n        <div className={styles.content}>\n          {result === 'success'\n            ? <a href=\"https://oliva.health\"><img alt=\"logo\" src=\"https://oliva-static-assets.s3.amazonaws.com/5f4625e7bfab83f32de77fe9_Oliva-logo-svg.svg\" /></a>\n            : <Quote />\n          }\n        </div>\n      </div>\n      <div className={styles.rightPane}>\n        <div className={styles.content}>\n          {result === 'success'\n            ? <Fragment>\n                <div className={styles.success}>\n                  <Paragraph>Thanks!</Paragraph>\n                  <Paragraph>Your payment was successful. We just emailed you a receipt.</Paragraph>\n                  <Paragraph>You'll receive your festive gift card in the next few days.</Paragraph>\n                  <img alt=\"success\" src=\"https://oliva-static-assets.s3.amazonaws.com/Communication.png\"/>\n                  <Paragraph>Happy new year for 2021.<br/> We all need it.</Paragraph>\n                </div>\n                <a className={styles.homeLink} href=\"https://oliva.health\">\n                  <img src=\"https://oliva-static-assets.s3.amazonaws.com/5fae958234933b025f2fe5c5_logo-oliva.svg\" />\n                </a>\n              </Fragment>\n            : <Fragment>\n                <div className={styles.verticalSpacer}/>\n                <Paragraph>Here's how it works</Paragraph>\n                <div className={styles.list}>\n                  <div>\n                    <h2>1</h2>\n                    <Paragraph>We'll send you a beautiful, festive gift card with a unique code. You can print or forward it to your friend or loved one.</Paragraph>\n                  </div>\n                  <div>\n                    <h2>2</h2>\n                    <Paragraph>\n                      They can use the code to book their first session from January 1st. They'll start with a free{' '}\n                      <span className={styles.toolTip}>\n                        <span className={styles.trigger}>matching session</span>\n                        <span className={styles.tipContent}></span>\n                      </span>\n                      , then they'll have three one-hour therapy sessions via video call.\n                    </Paragraph>\n                  </div>\n                  <div>\n                    <h2>3</h2>\n                    <Paragraph>Processing 2020 becomes much easier.</Paragraph>\n                  </div>\n                </div>\n                <Quote />\n                <Button role=\"link\" onClick={handleClick}>\n                  Gift 3 therapy sessions for Â£200\n                </Button>\n              </Fragment>\n          }\n        </div>\n      </div>\n      {isProduction ? null : <div className={styles.testBanner}>Test mode</div>}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/marc.davies/Development/Oliva/give/src/index.js",[],"/Users/marc.davies/Development/Oliva/give/src/Quote.js",[],{"ruleId":"21","severity":1,"message":"22","line":31,"column":13,"nodeType":"23","messageId":"24","endLine":31,"endColumn":18},{"ruleId":"25","severity":1,"message":"26","line":67,"column":19,"nodeType":"27","endLine":67,"endColumn":117},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]