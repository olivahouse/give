[{"/Users/marc.davies/Development/Oliva/give/src/reportWebVitals.js":"1","/Users/marc.davies/Development/Oliva/give/src/App.js":"2","/Users/marc.davies/Development/Oliva/give/src/index.js":"3","/Users/marc.davies/Development/Oliva/give/src/Quote.js":"4","/Users/marc.davies/Development/Oliva/give/src/Tooltip.js":"5"},{"size":362,"mtime":1607427329384,"results":"6","hashOfConfig":"7"},{"size":5889,"mtime":1607955014060,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1607427329383,"results":"9","hashOfConfig":"7"},{"size":650,"mtime":1607528059431,"results":"10","hashOfConfig":"7"},{"size":1167,"mtime":1607954952733,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cp636t",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/marc.davies/Development/Oliva/give/src/reportWebVitals.js",[],"/Users/marc.davies/Development/Oliva/give/src/App.js",["24"],"import { Fragment, useState } from 'react';\nimport { Button, Paragraph, SmallPrint } from '@olivahouse/ui';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { parse } from 'query-string';\n\nimport '@olivahouse/ui/lib/styles.css';\n\nimport styles from './styles.module.css';\n\nimport { Tooltip } from './Tooltip';\nimport { Quote } from './Quote';\n\nconst isProduction = !window.location.href.includes('localhost');\n\nconst STRIPE_PUBLC_API_KEY = isProduction\n  ? 'pk_live_51HYpBBIC0gTe0BTt1h2esyxTioSzPbrMk4vRFtV8OL8XCR0obV2Ieo18Ozw1PZoCfAtqfEAPQA2xXHeCz7mWKTqQ002QJbMlee'\n  : 'pk_test_51HYpBBIC0gTe0BTtZkET4e30h4PpAgB23MVqHvN9ffoYg2oAsu1HI7QfTOuLWwUhpgOcd8oeZ6CVFcVjU4QmS28Z006bgCey7P';\nconst STRIPE_PRICE_ID = isProduction\n  ? 'price_1HyHgOIC0gTe0BTtBuLkv2Up'\n  : 'price_1HyHC6IC0gTe0BTts6l9Dact';\n\nconst stripePromise = loadStripe(STRIPE_PUBLC_API_KEY);\n\nconst { result } = parse(window.location.search);\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleClick = async (event) => {\n\n    if (!isChecked) {\n      setIsError(true);\n      return;\n    }\n\n    setIsLoading(true);\n    // When the customer clicks on the button, redirect them to Checkout.\n    const stripe = await stripePromise;\n    const { error } = await stripe.redirectToCheckout({\n      lineItems: [{\n        price: STRIPE_PRICE_ID,\n        quantity: 1,\n      }],\n      mode: 'payment',\n      successUrl: `${window.location.origin}?result=success`,\n      cancelUrl: window.location.origin,\n    });\n    // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `error.message`.\n    if (error) {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChangeCheckbox = ({ target }) => {\n    setIsChecked(!isChecked);\n    setIsError(false);\n  };\n\n  return (\n    <div className={styles.viewport}>\n      <div className={styles.leftPane}>\n        <div className={styles.content}>\n          {result === 'success'\n            ? <a href=\"https://oliva.health\"><img alt=\"logo\" src=\"https://oliva-static-assets.s3.amazonaws.com/5f4625e7bfab83f32de77fe9_Oliva-logo-svg.svg\" /></a>\n            : <Quote />\n          }\n        </div>\n      </div>\n      <div className={styles.rightPane}>\n        <div className={styles.content}>\n          {result === 'success'\n            ? <Fragment>\n                <div className={styles.success}>\n                  <Paragraph>Thanks!</Paragraph>\n                  <Paragraph>Your payment was successful. We just emailed you a receipt.</Paragraph>\n                  <Paragraph>You'll receive your festive gift card within 2 working days and before Dec 24th.</Paragraph>\n                  <img alt=\"success\" src=\"https://oliva-static-assets.s3.amazonaws.com/Communication.png\"/>\n                  <Paragraph>Happy new year for 2021.<br/> We all need it.</Paragraph>\n                </div>\n                <a className={styles.homeLink} href=\"https://oliva.health\">\n                  <img src=\"https://oliva-static-assets.s3.amazonaws.com/5fae958234933b025f2fe5c5_logo-oliva.svg\" />\n                </a>\n              </Fragment>\n            : <Fragment>\n                <div className={styles.verticalSpacer}/>\n                <Paragraph>Here's how it works</Paragraph>\n                <div className={styles.list}>\n                  <div>\n                    <h2>1</h2>\n                    <Paragraph>We'll send you a beautiful, festive gift card with a unique code. You can print or forward it to your friend or loved one.</Paragraph>\n                  </div>\n                  <div>\n                    <h2>2</h2>\n                    <Paragraph>\n                      They can use the code to book their first session from January 1st. They'll start with a{' '}\n                      <Tooltip content=\"The goal of the matching session is to find your friend the right therapist\">\n                        matching session\n                      </Tooltip>\n                      , then they'll have two one-hour therapy sessions via video call.\n                    </Paragraph>\n                  </div>\n                  <div>\n                    <h2>3</h2>\n                    <Paragraph>Processing 2020 becomes much easier.</Paragraph>\n                  </div>\n                </div>\n                <Quote />\n                <div className={styles.checkbox}>\n                  <input name=\"legal\" type=\"checkbox\" checked={isChecked} onChange={handleChangeCheckbox} />\n                  <SmallPrint>\n                    I agree to the{' '}\n                    <Tooltip content={\n                      <Fragment>\n                        <SmallPrint>Recipients must be 18 years or older to receive therapy from Oliva.</SmallPrint>\n                        <SmallPrint>Offer valid for the UK and EU only.</SmallPrint>\n                        <SmallPrint>Oliva is not suitable for people in a crisis. Please see our website for helplines.</SmallPrint>\n                        <SmallPrint>Therapy sessions from this offer must be redeemed by March 31st 2021.</SmallPrint>\n                      </Fragment>\n                    }>\n                      terms of the offer\n                    </Tooltip>\n                  </SmallPrint>\n                  {isError && <div className={styles.errorMessage}><SmallPrint>We need you to agree to the terms.</SmallPrint></div>}\n                </div>\n                <Button isLoading={isLoading} role=\"link\" onClick={handleClick}>\n                  Gift 3 sessions for Â£150\n                </Button>\n                <div className={styles.verticalSpacer}/>\n              </Fragment>\n          }\n        </div>\n      </div>\n      {isProduction ? null : <div className={styles.testBanner}>Test mode</div>}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/marc.davies/Development/Oliva/give/src/index.js",[],["25","26"],"/Users/marc.davies/Development/Oliva/give/src/Quote.js",[],"/Users/marc.davies/Development/Oliva/give/src/Tooltip.js",["27"],{"ruleId":"28","severity":1,"message":"29","line":85,"column":19,"nodeType":"30","endLine":85,"endColumn":117},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":34,"column":7,"nodeType":"30","endLine":34,"endColumn":31},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]